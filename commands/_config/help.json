{
    "help_tags": [
        "normal", "shitpost", "restricted", "core", "hatsune", "_update", "_gacha", "cb", "admin", "twitter"
    ],
    "commands": {
        "template": {
            "flags":    ["placeholder"],
            "hidden":   false,
            "usage":    ".function",
            "subcmd":   null,
            "aliases":  null,
            "help":     "help",
            "help_ex":  "help extended"
        },
        "character": {
            "flags":    ["normal", "hatsune"],
            "hidden":   false,
            "usage":    ".character [character] [options]",
            "subcmd":   ["help"],
            "aliases":  ["chara", "c", "ue", "card", "stats", "pic"],
            "help":     "Fetch data on the specified character.",
            "help_ex":  "Search HNoteDB for character entry. \n\nUse `.c help` for more information on prefixes and explaination of embed reactions. `[character]` follows format of `(prefix.)name`, for example, `.c s.kyaru` for Kyaru (Summer). \n\n`[options]` currently only accepts `flb` which fetches the FLB variant of the character, for example, `.c kyaru flb`. \n\nListed aliases will bring you to the specified page when called. Use .help alias for more information."
        },
        "position": {
            "flags":    ["normal", "hatsune"],
            "hidden":   false,
            "usage":    ".position [character/lineup]",
            "subcmd":   null,
            "aliases":  ["pos"],
            "help":     "Fetch the lineup of a specific formation, or enter a character to show their relative position to other characters in their formation.",
            "help_ex":  "Fetch the lineup of specific formation. Lineups are: `vanguard`, `midguard` and `rearguard`. Entering a `character` will automatically list the lineup they are in and their position will be bolded."
        },
        "tag": {
            "flags":    ["normal", "hatsune"],
            "hidden":   false,
            "usage":    ".tag [*tags]",
            "subcmd":   ["d"],
            "aliases":  null,
            "help":     "Fetch all characters that satisfies the given tags.",
            "help_ex":  "Enter in tags separated by a space to search for character(s) that satisfy the tags. You can add `-` infront of a tag to signify that the tag should be excluded. Use `.help definitions` to learn more about the currently available tags.\n\n> `.tag d [tags]`\nSubcommand Aliases: `def` `help`\nEnter in tags to get their definitions."
        },
        "alias": {
            "flags":    ["normal", "hatsune"],
            "hidden":   false,
            "usage":    ".alias [*options]",
            "subcmd":   ["add", "edit", "delete"],
            "aliases":  null,
            "help":     "View, add, edit, or delete a character alias depending on the option specified. Use `.help alias` for more details.",
            "help_ex":  "`.alias [alias/character]`\nThe former will check what the `alias` is linked to, and the latter will list all aliases tied to the specified `character`.\n\nOther syntax:\n`.alias add [alias] [character]`\n`.alias edit [alias] [character]`\n`.alias delete [alias]`\nIn all cases `[alias]` is case-insensitive and cannot contain special tokens nor already exist unless editing or deleting, and `[character]` must be a valid character in the database. Only aliases marked with `local` may be modified/removed."
        },
        "cbtag": {
            "flags":    ["normal", "cb"],
            "hidden":   false,
            "usage":    ".cbtag [*options]",
            "subcmd":   ["post", "purge", "edit", "reset"],
            "aliases":  null,
            "help":     "Toggle boss role/view current boss waits. Use `.help cbtag` for more information.",
            "help_ex":  "`.cbtag [*boss_number]`\nToggle the boss role on yourself or add the `CW Janitor` role by entering `janitor`.\n\n`.cbtag post`\nPost a signboard for which you can view all waits in your guild and react to emotes on the bottom to toggle the specific boss. Only 1 of these signboards will be active at any one time and this command will not work if you're not in a guild.\n\n `.cbtag purge`\nRemove all boss roles from yourself.\n\n`.cbtag edit [boss_num] [name]`\nEdit the boss name for the specific boss number.\n\n`.cbtag reset`\nClears all boss names. [restricted]"
        },
        "kill": {
            "flags":    ["core", "restricted"],
            "hidden":   true,
            "usage":    ".kill",
            "subcmd":   null,
            "aliases":  ["kys"],
            "help":     "Bury Ames",
            "help_ex":  null
        },
        "status": {
            "flags":    ["normal", "core"],
            "hidden":   false,
            "usage":    ".status [*options]",
            "subcmd":   ["cmd"],
            "aliases":  ["toirland"],
            "help":     "Ames' Status report",
            "help_ex":  null
        },
        "command_set": {
            "flags":    ["core", "restricted"],
            "hidden":   true,
            "usage":    ".command_set [command] [state:int]",
            "subcmd":   null,
            "aliases":  ["cs"],
            "help":     "Turn a command on/off. Command keys can be found in `amesconfig.json`.",
            "help_ex":  null
        },
        "ping": {
            "flags":    ["normal", "core"],
            "hidden":   false,
            "usage":    ".ping",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Get Ames' current latency in miliseconds.",
            "help_ex":  null
        },
        "purge": {
            "flags":    ["core", "admin"],
            "hidden":   true,
            "usage":    ".purge [depth=100]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Delete all Ames' messages in the current channel up to specified depth.",
            "help_ex":  null
        },
        "resetdb": {
            "flags":    ["normal", "core", "hatsune"],
            "hidden":   false,
            "usage":    ".resetdb",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Use this command should the HNoteDB connection pool be exhausted.",
            "help_ex":  null
        },
        "reload": {
            "flags":    ["core", "restricted"],
            "hidden":   true,
            "usage":    ".reload [cog]",
            "subcmd":   null,
            "aliases":  ["refresh"],
            "help":     "Reload a cog. Saves time restarting Ames. Some cogs cannot be refreshed. Cog names are simply the filenames after `cog_`.",
            "help_ex":  null
        },
        "ext_set": {
            "flags":    ["core", "restricted"],
            "hidden":   true,
            "usage":    ".ext_set [cog] [state:int]",
            "subcmd":   null,
            "aliases":  ["es"],
            "help":     "Load/unload a cog. Cog names are simply the filenames after `cog_`.",
            "help_ex":  null
        },
        "say": {
            "flags":    ["core", "admin"],
            "hidden":   true,
            "usage":    ".say [message] [*location_key]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Have Ames say something. Command will be deleted on call. Ames will be able to use all emotes she has access to.",
            "help_ex":  "Will default to the current channel if `[location_key]` is left blank. Otherwise, the syntax is `#(guild_id).channel_id`. If `guild_id` is left blank it will default to the current guild.\n*Currently this command is restricted to a single guild. You also need the [admin] permission in order to use this command. see `.help permissions`*"
        },
        "debug": {
            "flags":    ["core", "restricted"],
            "hidden":   true,
            "usage":    ".debug [state:int]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Switch debug mode on/off.",
            "help_ex":  null
        },
        "choose": {
            "flags":    ["normal", "core"],
            "hidden":   false,
            "usage":    ".choose [*items]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Have Ames choose something from a list of items separated by a comma (`,`).",
            "help_ex":  null
        },
        "gacha": {
            "flags":    ["normal", "_gacha"],
            "hidden":   false,
            "usage":    ".gacha [num=10]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Do a gacha roll. The number must be between 0 and 10. May be heavy on data (~100-150kB per image).",
            "help_ex":  null
        },
        "roll": {
            "flags":    ["normal", "_gacha"],
            "hidden":   false,
            "usage":    ".roll [num=10]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Do `num` gacha pulls and have Ames summarize them. `num` cannot be negative nor can it be too big (>10000).",
            "help_ex":  null
        },
        "spark": {
            "flags":    ["normal", "_gacha"],
            "hidden":   false,
            "usage":    ".spark [*options]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Try to obtain a rateup character in the pool. Use `.help spark` for more details.",
            "help_ex":  "Try to obtain a character in the limited pool within some roll restriction. Usage is:\n `.spark [character] [roll_limit=300]`\nWhere the parameters `character` and `limit` can be entered in any order or omitted.\n\n`character` is a character in the rate up pool; use `.banner` to see who is available at the moment. If left blank or invalid will cause the function to stop once any rate up is rolled.\n\n`limit` is a positive integer between 1 and 300 where the function will stop rolling if you have not rolled your target within this number of rolls. `roll_limit` will default to 300 if left blank.\n\nThis function will not work if the limited pool is empty."
        },
        "update": {
            "flags":    ["_update","restricted"],
            "hidden":   true,
            "usage":    ".update [*options]",
            "subcmd":   ["all", "hatsune","index","res","server","gacha","ex"],
            "aliases":  null,
            "help":     "Update assets and resources. Use `.help update` for more information.",
            "help_ex":  "`.update`\nThis command will attempt to update all assets automatically with some manual prompts.\n\n`.update hatsune [command]`\nUpdates `prefix_title` and `prefix_new` in `hatsune_config.json`. Command syntax is: `p.(-)key(=Name)(,*);pn.prefix=(prefix_alias_new,)` \ne.g. `p.r=Ranger;pn.r=ranger` sets `r` as 'Ranger' when constructing full names and adds `ranger` as one of the input aliases to be aliased to prefix `r`\n\n`.update index`\nUpdate the local index with index in the database.\n\n`.update res`\nUpdate the local `.png` assets.\n\n`.update server`\nUpdates all server icon assets.\n\n`.update gacha [command]`\nUpdates the gacha config. Command syntax is: `pool.(-)character(,*);lim.(character)(,*)` \ne.g. `prifes.1;ssr.RRin,RMahiru;lim.;f.` sets `prifes` to active, adds `RRin` and `RMahiru` to the normal SSR pool, resets the limited pool, and forces asset update to reflect character rarity."
        },
        "big": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".big [emote] [num]",
            "subcmd":   null,
            "aliases":  ["e","b"],
            "help":     "Enlarge the emote.",
            "help_ex":  "`[emote]` can be a full emote. If `[emote]` is an emote name, then the emote must be an emote Ames has access to and the name must be partially correct (if the latter multiple emotes will be found and the best match will be assumed). There is little to no fault tolerance in emote searching. \n`[num]` is an integer that allows you to pick which emote to use should `[emote]` search returns more than 1 result. If `[num]` is left blank or invalid the command will default to the best match."
        },
        "find": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".find [*emote_name]",
            "subcmd":   null,
            "aliases":  ["f"],
            "help":     "List all emotes Ames has access to/try to find the specified emote.",
            "help_ex":  null
        },
        "spray":    {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".spray [*@user]",
            "subcmd":   null,
            "aliases":  ["s"],
            "help":     "For bullying. `@user` must be a mention but can be left blank.",
            "help_ex":  "Geik"
        },
        "dumb": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".dumb [*user]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Someone is a dumbass. `User` can be a (partial) string or a mention. If left blank it will default to the person who invoked this command.",
            "help_ex":  null
        },
        "enty": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".enty [*user]",
            "subcmd":   null,
            "aliases":  ["enty1", "enty2", "enty3"],
            "help":     "WEE WOO WEE WOO MOU OWARI DA <:Owarida:570461350996738058>",
            "help_ex":  null
        },
        "bless": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".bless [*user]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Have Nozomi bless the specified user. `User` can be a (partial) string or a mention. If left blank it will default to the person who invoked this command.",
            "help_ex":  null
        },
        "amesbless": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".amesbless [*user]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Have Ames bless the specified user. `User` can be a (partial) string or a mention. If left blank it will default to the person who invoked this command.",
            "help_ex":  null
        },
        "kiran": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".kiran [*user]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "This command is cursed please don't use this command.",
            "help_ex":  "Please."
        },
        "kira": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".kira [*user]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "AAAH IT'S TOO BRIGHT -Hatsune",
            "help_ex":  "kira~"
        },
        "chenhug": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".chenhug [*user]",
            "subcmd":   null,
            "aliases":  ["chen"],
            "help":     "Have Ch'en hug the specified user. `User` can be a (partial) string or a mention. If left blank it will default to the person who invoked this command.",
            "help_ex":  null
        },
        "permissions": {
            "flags":    ["normal","core"],
            "hidden":   false,
            "usage":    ".permissions [*options]",
            "subcmd":   ["set", "remove"],
            "aliases":  ["perm"],
            "help":     "Assign roles to certain permissions that allows members with the role to access certain restricted functions on Ames. Use `.help permissions` or `.perm` for more info.",
            "help_ex":  "Assign roles to perms. You can see the list of available perms and their status by using `.perm`.\n\n`.perm set [perm_key] [@role]`\nSet a role to a perm key. You can find perm keys and what they can do with `.perm` and `@role` must be a discord role. If a role already exists it will be replaced.\n\n`.perm remove [perm_key]`\nRemove any role attached to the `[perm_key]`."
        },
        "announce": {
            "flags":    ["twitter", "normal"],
            "hidden":   false,
            "usage":    ".announce [*options]",
            "subcmd":   ["set", "add", "master"],
            "aliases":  ["ann"],
            "help":     "See which twitter listeners are active in your guild. Use `.help announce` for more details.",
            "help_ex":  "Set up twitter listeners in your Guild. You can see available services via `.ann`.\n\n`.announce set [service] [status]`\nSet the status of a valid service in your guild. You can find valid services at `.ann`. You must have `[admin]` permission role to use the above subcommand(s).\n`[status]` can either be a digit `1` or `0` if you want to turn the specified service on/off respectively, or `[status]` can be a `#discord_channel` where you wish for Ames to send the embeds.\n\n> `.ann add *kwargs`\n`kwargs` can be `id=int active=0|1 includeRT=0|1 name=str tag=str`\n`id` is twitter account's tweetid, `name` is its display name (for clarification purposes) and `tag` is its handle/service code. This command is restricted.\n\n> `.ann master`\n Show all details of all enabled services. This command is restricted."
        },
        "banner": {
            "flags":    ["_gacha","normal"],
            "hidden":   false,
            "usage":    ".banner",
            "subcmd":   null,
            "aliases":  null,
            "help":     "See the current pool/banner conditions",
            "help_ex":  null
            },
        "bruh": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".bruh",
            "subcmd":   null,
            "aliases":  null,
            "help":     "bruh",
            "help_ex":  null
            },
        "pins": {
            "flags":    ["core", "admin"],
            "hidden":   false,
            "usage":    ".pins [*options]",
            "subcmd":   null,
            "aliases":  ["pin"],
            "help":     "See if Ames can/cannot pin a message via :pushpin:. See `.help pins` for more details",
            "help_ex":  "Call with no options to see if Ames is allowed to pin messages via :pushpin: react. Accepted inputs are `active:int` and `prune`.\n`.pins [active]`\n`[active]` must either be `0` or `1` which turns the feature off/on respectively.\n`.pins prune`\nThis will prune the local tracker file of any messages that are invalid."
        },
        "changelog": {
            "flags":    ["core"],
            "hidden":   false,
            "usage":    ".changelog [*option]",
            "subcmd":   null,
            "aliases":  ["cl"],
            "help":     "View Ames' changelog",
            "help_ex":  "If `option` is left blank, changelog will only display the latest version's changelog.\nIf `option` is a `number` > 0, Ames will fetch the last `number` changelogs. This number cannot exceed 20.\nIf `option` is a `number` < 0, Ames will fetch the Xth latest changelog. This number cannot be bigger than the number of records in the local changelog.\nIf all previous checks have failed, Ames will assume `option` is a `version number` and will attempt to return the changelog for that specific version."
        },
        "cheer": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".cheer [*user]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Ganbare! -Hatsune",
            "help_ex":  "<:hatsuneblob:740452975369125919> <:hatsuneblob:740452975369125919> <:hatsuneblob:740452975369125919>"
        },
        "welcome": {
            "flags":    ["core"],
            "hidden":   false,
            "usage":    ".welcome [*options]",
            "subcmd":   null,
            "aliases":  ["welc"],
            "help":     "See the config for welcome messages in the guild. See `.help welcome` for more info",
            "help_ex":  "When called with no options, the command will return with the current settings for whether Ames should greet any new members joining the guild. You require `[admin]` permissions to modify the settings, but do not need them to read the settings. See `.help permissions` for more.\n\n `.welc [on/off] [#discord_channel]`\nEntering `on` or `off` will turn the function on or off respectively.\nEntering a discord channel will set the welcome message to that channel. Entering `none` will reset the channel. These 2 inputs can be entered in any order and do not have to be together. The function will not accept more than 2 options."
        },
        "compare": {
            "flags":    ["normal", "hatsune"],
            "hidden":   false,
            "usage":    ".compare [rank_range] [character]",
            "subcmd":   null,
            "aliases":  ["delta"],
            "help":     "Fetch the stat number delta between 2 rank ranges.",
            "help_ex":  "`[rank_range]` is in the form `rank(initial)-rank(final)`, for example, `15-18` for stat difference from 15 to 18. If the second number (rank final) is left blank, it will default to the highest possible rank.\n`[character]` input is the same as the ones used in `.character`."
        },
        "muimi": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".muimi [image_link|optional]",
            "subcmd":   null,
            "aliases":  null,
            "help":     "Muimi approves this image",
            "help_ex":  "Ames will attempt to fetch the image by the link provided and then paste Muimi over it. This can also be done with attachments - type the command (with no link) in the description box when attaching an image. Only the first image will be fetched in the event of multiple attachments/links.\nThis command cannot handle animated images... yet."
        },
        "wide": {
            "flags":    ["shitpost"],
            "hidden":   false,
            "usage":    ".wide [num=5]",
            "subcmd":   null,
            "aliases":  ["w"],
            "help":     "WIDETSUNE",
            "help_ex":  "very wide but cannot be bigger than 10 wide or smaller than 1 wide.\n||Also you can include an emote to widen it but its pretty cursed.||"
        },
        "shen": {
            "flags":    ["shitpost","restricted"],
            "hidden":   false,
            "usage":    ".shen [cmd]",
            "subcmd":   ["add","edit","new","delete"],
            "aliases":  null,
            "help":     "create/edit/delete shen categories",
            "help_ex":  "> `.shen add name=name&link=a,b,...`\nUsed to append images to existing pools. `name` is mandatory. Command also accepts any attachments on this.\n\n> `.shen new name=name&seq=0&default=0&tags=a,b,c,...`\ncreates a new category. `name` cannot already exist. Only `name` is mandatory and all other kwargs are assumed a default value.\n\n> `.shen edit name=name&active=1&seq=0&default=0&tags=a,+b,-c,...`\nbasically funcions the same way as `new` but requires the category to exist.\n\n> `.shen delete name=name&index=1,2,...`\nremove images from a category."
        }
    }
}